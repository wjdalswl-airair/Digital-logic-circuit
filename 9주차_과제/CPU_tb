`timescale 1ns / 1ps

module cpu_tb;
    // Testbench signals
    reg clk;
    reg reset;
    wire [7:0] pc_out;
    wire [7:0] acc_out;

    // Instantiate the CPU module
    cpu uut (
        .clk(clk),
        .reset(reset),
        .pc_out(pc_out),
        .acc_out(acc_out)
    );

    // Clock generation
    initial begin
        clk = 0;
        forever #5 clk = ~clk; // 100MHz clock
    end

    // Test sequence
    initial begin
        // Initialize reset
        reset = 1;
        #10;
        
        // Release reset and start CPU operation
        reset = 0;

        // Run the simulation for a sufficient amount of time
        #200;

        // Finish simulation
        $stop;
    end

    // Monitor the CPU outputs
    initial begin
        $monitor("Time = %0t, Reset = %b, PC = %h, ACC = %h", $time, reset, pc_out, acc_out);
    end
endmodule
